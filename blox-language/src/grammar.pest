WHITESPACE = _{ " " | "\t" | "\r" | "\n" }

identifier = { (LETTER|"_")+ }
boolean = _{ boolean_true | boolean_false }
boolean_true = { "true" }
boolean_false = { "false" }
number = @{ "-"? ~ NUMBER+ ~ ("." ~ NUMBER+)? }
string = @{ ("\"" ~ (!"\"" ~ ANY)* ~ "\"") | ("'" ~ (!"'" ~ ANY)* ~ "'") }
symbol = @{ ":" ~ LETTER+ }

program = { SOI ~ block ~ EOI }
block = { statement* }

statement = { (definition|binding|import|expression) }

binding = { "let" ~ identifier ~ "=" ~ expression }
definition = { "def" ~ identifier ~ "(" ~ (identifier ~ ("," ~ identifier)*)? ~ ")" ~ "{" ~ block ~ "}" }

import = { "import" ~ "{" ~ imported_symbol ~ ("," ~ imported_symbol)* ~ "}" ~ "from" ~ string }
imported_symbol = { identifier ~ ("as" ~ identifier)? }

expression = { expression_term ~ (operator ~ expression_term)* }
expression_term = { (if_expression | array_index | object_index | function_call | value | "("~expression~")") }

value = _{ literal | identifier | array | object }

if_expression = { "if" ~ expression ~ "{" ~ block ~ "}" ~ elseif_expression* ~ else_expression? }
elseif_expression = { "else" ~ "if" ~ expression ~ "{" ~ block ~ "}" }
else_expression = { "else" ~ "{" ~ block ~ "}" }

function_call = { identifier ~ "(" ~ argument_list? ~ ")" }
argument_list = _{ argument ~ ("," ~ argument)* }
argument = { identifier ~ ":" ~ expression }

literal = { boolean | number | string | symbol }

array = { "[" ~ array_members? ~ "]" }
array_members = _{ expression ~ ("," ~ expression)* }
array_index = { (function_call | identifier | array) ~ "[" ~ expression ~ "]" }

object = { "{" ~ object_members? ~ "}" }
object_members = _{ object_member ~ ("," ~ object_member)* }
object_member = { identifier ~ ":" ~ expression }
object_index = { (function_call | identifier | object) ~ "." ~ identifier }

operator = _{ multiply | concatenate | add | subtract | equal | not_equal | greater_or_equal | greater_than | less_or_equal | less_than }
multiply = { "*" }
concatenate = { "++" }
add = { "+" }
subtract = { "-" }
equal = { "==" }
not_equal = { "!=" }
greater_or_equal = { ">=" }
greater_than = { ">" }
less_or_equal = { "<=" }
less_than = { "<" }
